---
title: "Maloney and Barnes-Holmes 2016"
author: "Mateus Silvestrin"
format: 
  html:
     code-fold: true
     toc: true
     fig-width: 12
     fig-cap-location: top
     fig-format: svg
     embed-resources: true
     theme: journal
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
#library(ggrain)
library(colorspace)
library(here)

library(afex)
library(emmeans)
library(papaja)


if (Sys.info()[["sysname"]] == "Windows") windowsFonts(Roboto = windowsFont("Roboto"))
theme_set(theme_bw(16,"Roboto")+
  theme(legend.position = "bottom"))
```

## Correção de p-valores interação _response options_ x _response-order_

### Testes intra-grupos (diferenças nos tipos de resposta)
```{r}
p_vals_intra <- c(.9,.42)
corrected_intra <- p.adjust(p_vals_intra,"holm")
```

Valores originais = `r p_vals_intra`  
Valores com correção de Holm para múltiplas comparações = `r corrected_intra`

### Testes entre-grupos (diferenças na ordem de resposta)
```{r}
p_vals_entre <- c(.04,.31)
corrected_entre <- p.adjust(p_vals_entre,"holm")
```

Valores originais = `r p_vals_entre`  
Valores com correção de Holm para múltiplas comparações = `r corrected_entre`

## Correção de p-valores interação _trial type_ x _block order_ x _response option_

```{r}
results_dt <- 
  expand_grid(Block_Order = factor(c("Consistent", "Inconsistent")),
              Response_Option = factor(c("Similar/Different","True/False"))) %>% 
  mutate(d_irap = c(-.01,-.13,-.03,.16),
         ci = c(.08,.1,.08,.07))

results_dt %>% 
  ggplot(aes(Response_Option, d_irap, colour = Block_Order))+
  geom_errorbar(aes(ymin = d_irap-ci, ymax = d_irap+ci), width = .2,
                position = "dodge2", linewidth = 1)+
  geom_point(size = 3, position = position_dodge2(width = .2))
```

## Testes entre ordem de bloco
```{r}
p_vals_block_order <- c(.02,.36)
corrected_block_order <- p.adjust(p_vals_block_order,"holm")
```

Valores originais = `r p_vals_block_order`  
Valores com correção de Holm para múltiplas comparações = `r corrected_block_order`

## Testes entre tipo de resposta
```{r}
p_vals_response <- c(.09,.36)
corrected_response <- p.adjust(p_vals_response,"holm")
```

Valores originais = `r p_vals_response`  
Valores com correção de Holm para múltiplas comparações = `r corrected_response`


# Simulando um I-RAP

 The four trial-types for a hypothetical self-esteem IRAP using "Self"/"Others" as labels and "Positive"/"Negative" as targets would be:
Trial-Type 1: Self-Positive (e.g., Label: "I am," Target: "Loyal")
Trial-Type 2: Self-Negative (e.g., Label: "I am," Target: "Cruel")
Trial-Type 3: Others-Positive (e.g., Label: "Others are," Target: "Loyal")
Trial-Type 4: Others-Negative (e.g., Label: "Others are," Target: "Cruel")

```{r}
set.seed(777)

fixed_effects <- list(self_positive = .5,
                      self_negative = 1.5,
                      others_positive = .7,
                      others_negative = 1)

n_participants <- 10
n_trials_per_condition <- 20

irap_sim <- 
  expand_grid(trial_type = factor(1:4, labels = c("self_positive","self_negative",
                            "others_positive","others_negative")),
            participant = 1:n_participants,
            type_trial_n = 1:n_trials_per_condition) %>% 
  group_by(participant) %>% 
  mutate(participant_intercept = rexp(1,3), 
          participant_var = rexp(1,2)) %>% 
  group_by(participant, trial_type) %>% 
  mutate(participant_trial_effect = rexp(1,3)) %>% 
  ungroup() %>% 
  rowwise() %>% 
  mutate(rt = rnorm(1,
                    participant_intercept + fixed_effects[[trial_type]] + participant_trial_effect,
                    sd = participant_var)) %>% 
  ungroup()
```

```{r}
irap_sim %>% 
  ggplot(aes("", rt, colour = trial_type))+
  stat_summary()
```

```{r}
lmm <- 
  irap_sim %>% 
  mixed(rt ~ trial_type + (1+trial_type|participant),method = "S", data = .,
        type = 2, check_contrasts = F)

lmm
lmm %>% summary()
```

